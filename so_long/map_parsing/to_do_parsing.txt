// 1 -> check the wall is there any leak on it
// 0 -> have an empty space on the map
// C -> have some clooctaible (coins)
// E -> have an exit dor in the map
// P -> have a playser in the map

// #1 The map has to be constructed with 3 components: walls, collectibles, and free space.
// #2 The map must contain 1 exit at least 1 collectible and 1 starting position to be valid.
// #3 If the map contains a duplicates characters (exit/start), you should display an error message.
// #4 The map must be closed/surrounded by walls. If it’s not, the program must return an error.
// #5 is i have to check the extantion

// i thing at lest have a three lines in the map (using the get_next_line to read the map).
// wall       -> 11111111111111
// free space -> 10000000000001
// wall       -> 11111111111111

// start parsing
// -> check if the file is there and have the right permission to it: to do
// -> if it is read it with the get_next_line function
// -> and check 
// -> The map must contain 1 exit dor
// -> at least 1 collectible (coins) can be more
// -> 1 starting position of the player to be valid
// -> If the map contains a duplicates characters (exit(E)/start(P)), you should display an error message.
// -> and The map must be rectangular.
// -> The map must be closed/surrounded by walls. If it’s not, the program must return an error.
// -> You have to check if there’s a valid path in the map.


// NOTE:
// check the map is closed/surrounded by walls
// check is there the player P
// if it is we need to check is there at least one C
// if it is we need to check is there at least one E